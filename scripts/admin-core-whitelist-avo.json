{
  "getPublicCollectionsById": "query getPublicCollectionsById($id: uuid!, $typeId: Int!, $limit: Int!) { app_collections( order_by: { title: asc } where: { type_id: { _eq: $typeId } id: { _eq: $id } is_public: { _eq: true } is_deleted: { _eq: false } } limit: $limit ) { id title } }",
  "getPublicCollectionsByTitle": "query getPublicCollectionsByTitle($title: String!, $typeId: Int!, $limit: Int!) { app_collections( order_by: { title: asc } where: { type_id: { _eq: $typeId } title: { _ilike: $title } is_public: { _eq: true } is_deleted: { _eq: false } } limit: $limit ) { id title } }",
  "getPublicCollections": "query getPublicCollections($limit: Int!, $typeId: Int!) { app_collections( order_by: { title: asc } where: { type_id: { _eq: $typeId } is_public: { _eq: true } is_deleted: { _eq: false } } limit: $limit ) { id title } }",
  "deleteContentPageLabelById": "mutation deleteContentPageLabelById($id: Int!) { delete_app_content_labels(where: { id: { _eq: $id } }) { affected_rows } }",
  "getContentPageLabelById": "query getContentPageLabelById($id: Int!) { app_content_labels(where: { id: { _eq: $id } }) { label id content_type link_to created_at updated_at } }",
  "getContentPageLabels": "query getContentPageLabels( $where: app_content_labels_bool_exp! $offset: Int! $limit: Int! $orderBy: [app_content_labels_order_by!]! ) { app_content_labels(offset: $offset, limit: $limit, order_by: $orderBy, where: $where) { label content_type link_to created_at updated_at id } app_content_labels_aggregate(where: $where) { aggregate { count } } }",
  "insertContentPageLabel": "mutation insertContentPageLabel($contentPageLabel: app_content_labels_insert_input!) { insert_app_content_labels(objects: [$contentPageLabel]) { returning { id } } }",
  "updateContentPageLabel": "mutation updateContentPageLabel( $contentPageLabel: app_content_labels_set_input! $contentPageLabelId: Int! ) { update_app_content_labels( where: { id: { _eq: $contentPageLabelId } } _set: $contentPageLabel ) { affected_rows } }",
  "deleteContentBlock": "mutation deleteContentBlock($id: Int!) { delete_app_content_blocks(where: { id: { _eq: $id } }) { affected_rows } }",
  "deleteContentLabelLinks": "mutation deleteContentLabelLinks($contentPageId: Int!, $labelIds: [Int!]!) { delete_app_content_content_labels( where: { label_id: { _in: $labelIds }, content_id: { _eq: $contentPageId } } ) { affected_rows } }",
  "getContentById": "query getContentById($id: Int!) {     app_content(where: { id: { _eq: $id }, is_deleted: { _eq: false } }) {         content_type         content_width         created_at         depublish_at         description         seo_description         meta_description         id         thumbnail_path         is_protected         is_public         path         user_profile_id         profile {             organisation {                 logo_url                 name                 or_id             }             profile_user_group {                 group {                     label                     id                 }             }             user: usersByuserId {                 id                 full_name                 mail             }         }         publish_at         published_at         title         updated_at         user_group_ids         user_profile_id         content_content_labels {             content_label {                 label                 id                 link_to             }         }         content_blocks: contentBlockssBycontentId(order_by: { position: asc }) {             content_block_type             content_id             created_at             id             position             updated_at             variables             enum_content_block_type {                 description                 value             }         }     } }",
  "getContentLabelsByContentType": "query getContentLabelsByContentType($contentType: String!) { app_content_labels(where: { content_type: { _eq: $contentType } }) { id label content_type link_to } }",
  "getContentPagesByIds": "query getContentPagesByIds($ids: [Int!]) { app_content(where: { id: { _in: $ids }, is_deleted: { _eq: false } }) { user_profile_id } }",
  "getContentPages": "query getContentPages( $where: app_content_bool_exp $offset: Int = 0 $limit: Int = 10 $orderBy: [app_content_order_by!] = {} ) { app_content(where: $where, limit: $limit, offset: $offset, order_by: $orderBy) { id content_type created_at depublish_at description seo_description meta_description thumbnail_path is_protected is_public path user_profile_id profile { organisation { or_id logo_url name } profile_user_group { group { id label } } user: usersByuserId { id full_name } } publish_at published_at title updated_at user_group_ids user_profile_id content_content_labels { content_label { id label link_to } } } app_content_aggregate(where: $where) { aggregate { count } } }",
  "getContentTypes": "query getContentTypes { lookup_enum_content_types { value description } }",
  "GetPermissionsFromContentPageByPath": "query GetPermissionsFromContentPageByPath($path: String!) { app_content(where: { path: { _eq: $path }, is_deleted: { _eq: false } }) { user_group_ids } }",
  "getPublicContentPagesByTitle": "query getPublicContentPagesByTitle( $limit: Int = 20 $orderBy: [app_content_order_by!] = {} $where: app_content_bool_exp = {} ) { app_content(where: $where, limit: $limit, order_by: $orderBy) { path title } }",
  "getPublicProjectContentPagesByTitle": "query getPublicProjectContentPagesByTitle( $title: String! $limit: Int = 20 $orderBy: [app_content_order_by!] = {} ) { app_content( where: { title: { _ilike: $title } content_type: { _eq: PROJECT } is_public: { _eq: true } is_deleted: { _eq: false } } limit: $limit order_by: $orderBy ) { path title } }",
  "getPublicProjectContentPages": "query getPublicProjectContentPages($limit: Int = 20, $orderBy: [app_content_order_by!] = {}) { app_content( limit: $limit order_by: $orderBy where: { content_type: { _eq: PROJECT } is_public: { _eq: true } is_deleted: { _eq: false } } ) { path title } }",
  "insertContentBlocks": "mutation insertContentBlocks($contentBlocks: [app_content_blocks_insert_input!]!) { insert_app_content_blocks(objects: $contentBlocks) { returning { id } } }",
  "insertContentLabelLinks": "mutation insertContentLabelLinks($objects: [app_content_content_labels_insert_input!]!) { insert_app_content_content_labels(objects: $objects) { affected_rows } }",
  "insertContent": "mutation insertContent($contentPage: app_content_insert_input!) { insert_app_content(objects: [$contentPage]) { returning { id } } }",
  "softDeleteContent": "mutation softDeleteContent($id: Int!) { update_app_content(where: { id: { _eq: $id } }, _set: { is_deleted: true }) { affected_rows } }",
  "updateContentBlock": "mutation updateContentBlock($id: Int!, $contentBlock: app_content_blocks_set_input!) { update_app_content_blocks(where: { id: { _eq: $id } }, _set: $contentBlock) { affected_rows } }",
  "updateContentById": "mutation updateContentById($id: Int!, $contentPage: app_content_set_input!) { update_app_content( where: { id: { _eq: $id }, is_deleted: { _eq: false } } _set: $contentPage ) { affected_rows } }",
  "fetchItemUuidByExternalId": "query fetchItemUuidByExternalId($externalId: bpchar!) { app_item_meta(where: { external_id: { _eq: $externalId } }) { uid is_published is_deleted } }",
  "getItemByExternalId": "query getItemByExternalId($externalId: bpchar!) { app_item_meta( where: { external_id: { _eq: $externalId } is_deleted: { _eq: false } is_published: { _eq: true } } ) { created_at depublish_at description duration expiry_date external_id id uid is_deleted is_orphaned is_published issued issued_edtf lom_classification lom_context lom_intendedenduserrole lom_keywords lom_languages lom_typicalagerange org_id organisation { or_id name logo_url } publish_at published_at series thumbnail_path title type { id label } type_id updated_at note item_collaterals(where: { description: { _eq: \"subtitle\" } }) { path description external_id } view_counts_aggregate { aggregate { sum { count } } } } }",
  "getItemByUuid": "query getItemByUuid($uuid: uuid!) { app_item_meta(where: { uid: { _eq: $uuid } }) { thumbnail_path created_at depublish_at depublish_reason description duration expiry_date external_id uid is_deleted is_published issued lom_classification lom_context lom_intendedenduserrole lom_keywords lom_languages lom_typicalagerange org_id organisation { or_id name } publish_at published_at series title type { id label } updated_at note relations(where: { predicate: { _eq: \"IS_REPLACED_BY\" } }) { object subject predicate created_at updated_at } item_collaterals(where: { description: { _eq: \"subtitle\" } }) { path description external_id } view_counts_aggregate { aggregate { sum { count } } } } }",
  "getItemDepublishReason": "query getItemDepublishReason($externalId: bpchar!) { app_item_meta( where: { external_id: { _eq: $externalId } is_deleted: { _eq: false } is_published: { _eq: false } } ) { depublish_reason is_published is_deleted } }",
  "getPublicItemsByTitleOrExternalId": "query getPublicItemsByTitleOrExternalId($title: String!, $externalId: bpchar!, $limit: Int!) { itemsByTitle: app_item_meta( order_by: { title: asc } limit: $limit where: { title: { _ilike: $title }, is_published: { _eq: true } } ) { external_id title is_published is_deleted } itemsByExternalId: app_item_meta( order_by: { title: asc } limit: $limit where: { external_id: { _eq: $externalId }, is_published: { _eq: true } } ) { external_id title is_published is_deleted } }",
  "getPublicItems": "query getPublicItems($limit: Int!) { app_item_meta( order_by: { title: asc } limit: $limit where: { is_published: { _eq: true } } ) { external_id title is_published is_deleted } }",
  "deleteNavigationItem": "mutation deleteNavigationItem($id: Int!) { delete_app_content_nav_elements(where: { id: { _eq: $id } }) { affected_rows } }",
  "getNavigationElements": "query getNavigationElements { app_content_nav_elements(distinct_on: placement, order_by: { placement: asc }) { id description placement tooltip } }",
  "getNavigationItemById": "query getNavigationItemById($id: Int!) { app_content_nav_elements(where: { id: { _eq: $id } }) { id created_at description user_group_ids icon_name label link_target placement position updated_at content_type content_path tooltip } }",
  "getNavigationItemsByPlacement": "query getNavigationItemsByPlacement($placement: String!) { app_content_nav_elements( order_by: { position: asc } where: { placement: { _eq: $placement } } ) { id created_at description user_group_ids icon_name label link_target placement position updated_at content_type content_path tooltip } }",
  "insertNavigationItem": "mutation insertNavigationItem($navigationItem: app_content_nav_elements_insert_input!) { insert_app_content_nav_elements(objects: [$navigationItem]) { returning { id } } }",
  "updateNavigationItemById": "mutation updateNavigationItemById($id: Int!, $navigationItem: app_content_nav_elements_set_input!) { update_app_content_nav_elements(where: { id: { _eq: $id } }, _set: $navigationItem) { affected_rows } }",
  "getOrganizationsWithUsers": "query getOrganizationsWithUsers { shared_organisations_with_users { or_id: company_id name } }",
  "fetchCollectionRelationsBySubjects": "query fetchCollectionRelationsBySubjects( $subjectIds: [uuid!]! $relationType: lookup_enum_relation_types_enum! ) { app_collection_relations( where: { subject: { _in: $subjectIds }, predicate: { _eq: $relationType } } ) { id object subject predicate created_at updated_at } }",
  "FetchItemRelationsBySubjects": "query FetchItemRelationsBySubjects( $subjectIds: [uuid!]! $relationType: lookup_enum_relation_types_enum! ) { app_item_relations( where: { subject: { _in: $subjectIds }, predicate: { _eq: $relationType } } ) { id object subject predicate created_at updated_at } }",
  "getEducationLevels": "query getEducationLevels { lookup_enum_lom_context { description } }",
  "getSubjects": "query getSubjects { lookup_enum_lom_classification { description } }",
  "getTranslations": "query getTranslations { app_site_variables(where: { name: { _ilike: \"translations-%\" } }) { name value } }",
  "updateTranslations": "mutation updateTranslations($name: String!, $translations: app_site_variables_set_input!) { update_app_site_variables(where: { name: { _eq: $name } }, _set: $translations) { affected_rows } }",
  "deleteUserGroup": "mutation deleteUserGroup($userGroupId: Int!) { delete_users_groups(where: { id: { _eq: $userGroupId } }) { affected_rows } }",
  "getUserGroupById": "query getUserGroupById($id: Int!) { users_groups(where: { id: { _eq: $id } }) { label id description created_at updated_at group_user_permission_groups(order_by: { permission_group: { label: asc } }) { permission_group { label id created_at description updated_at permission_group_user_permissions( order_by: { permission: { description: asc } } ) { permission { label description id } } } } } }",
  "getUserGroupsWithFilters": "query getUserGroupsWithFilters( $limit: Int! $offset: Int! $orderBy: [users_groups_order_by!]! $where: users_groups_bool_exp! ) { users_groups(limit: $limit, offset: $offset, order_by: $orderBy, where: $where) { label id created_at description updated_at } users_groups_aggregate(where: $where) { aggregate { count } } }",
  "insertUserGroup": "mutation insertUserGroup($userGroup: users_groups_insert_input!) { insert_users_groups(objects: [$userGroup]) { returning { id } } }",
  "updateUserGroup": "mutation updateUserGroup($userGroup: users_groups_set_input!, $userGroupId: Int!) { update_users_groups(where: { id: { _eq: $userGroupId } }, _set: $userGroup) { affected_rows } }",
  "bulkAddSubjectsToProfiles": "mutation bulkAddSubjectsToProfiles($subjects: [users_profile_classifications_insert_input!]!) { insert_users_profile_classifications(objects: $subjects) { affected_rows } }",
  "bulkDeleteSubjectsFromProfiles": "mutation bulkDeleteSubjectsFromProfiles($subjects: [String!]!, $profileIds: [uuid!]!) { delete_users_profile_classifications( where: { key: { _in: $subjects }, profile_id: { _in: $profileIds } } ) { affected_rows } }",
  "getContentCountsForUsers": "query getContentCountsForUsers($profileIds: [uuid!]!) { publicCollections: app_collections_aggregate( where: { profile: { id: { _in: $profileIds } } is_public: { _eq: true } is_deleted: { _eq: false } } ) { aggregate { count } } publicContentPages: app_content_aggregate( where: { user_profile_id: { _in: $profileIds } is_public: { _eq: true } is_deleted: { _eq: false } } ) { aggregate { count } } privateCollections: app_collections_aggregate( where: { profile: { id: { _in: $profileIds } } is_public: { _eq: false } is_deleted: { _eq: false } } ) { aggregate { count } } assignments: app_assignments_aggregate( where: { owner_profile_id: { _in: $profileIds }, is_deleted: { _eq: false } } ) { aggregate { count } } collectionBookmarks: app_collection_bookmarks_aggregate( where: { profile_id: { _in: $profileIds } } ) { aggregate { count } } itemBookmarks: app_item_bookmarks_aggregate(where: { profile_id: { _in: $profileIds } }) { aggregate { count } } privateContentPages: app_content_aggregate( where: { user_profile_id: { _in: $profileIds } is_public: { _eq: false } is_deleted: { _eq: false } } ) { aggregate { count } } }",
  "getDistinctBusinessCategories": "query getDistinctBusinessCategories { users_profiles( distinct_on: business_category where: { business_category: { _is_null: false }, is_deleted: { _eq: false } } ) { business_category } }",
  "getIdps": "query getIdps { users_idps { value } }",
  "getProfileIds": "query getProfileIds($where: users_summary_view_bool_exp!) { users_summary_view(where: $where) { profile_id } }",
  "getProfileNames": "query getProfileNames($profileIds: [uuid!]!) { users_summary_view(where: { profile_id: { _in: $profileIds }, is_deleted: { _eq: false } }) { profile_id full_name mail } }",
  "getUsers": "query getUsers( $offset: Int! $limit: Int! $orderBy: [users_summary_view_order_by!]! $where: users_summary_view_bool_exp! ) { users_summary_view(offset: $offset, limit: $limit, order_by: $orderBy, where: $where) { user_id full_name first_name last_name mail last_access_at is_blocked blocked_at { date: max } unblocked_at { date: max } profile_id stamboek acc_created_at group_id group_name company_name is_exception business_category idps { idp } classifications { key } contexts { key } organisations { organization_id unit_id organization { ldap_description } } user { temp_access { until from current { status } } } } users_summary_view_aggregate(where: $where) { aggregate { count } } }"
}