{
  "deleteNavigation": "mutation deleteNavigation($id: uuid!) { delete_app_navigation(where: { id: { _eq: $id } }) { affected_rows } }",
  "findAllNavigationItems": "query findAllNavigationItems { app_navigation(order_by: { placement: asc, position: asc }) { content_path content_type link_target placement position id icon_name user_group_ids label updated_at description created_at content_id tooltip } }",
  "findNavigationById": "query findNavigationById($id: uuid!) { app_navigation(where: { id: { _eq: $id } }) { id created_at description user_group_ids icon_name label link_target placement position updated_at content_type content_path tooltip } }",
  "findNavigationByPlacement": "query findNavigationByPlacement($placement: String!) { app_navigation(order_by: { position: asc }, where: { placement: { _eq: $placement } }) { id created_at description user_group_ids icon_name label link_target placement position updated_at content_type content_path tooltip } app_navigation_aggregate(where: { placement: { _eq: $placement } }) { aggregate { count } } }",
  "findNavigation": "query findNavigation { app_navigation(distinct_on: placement, order_by: { placement: asc }) { id description placement tooltip user_group_ids } app_navigation_aggregate(distinct_on: placement) { aggregate { count } } }",
  "insertNavigation": "mutation insertNavigation($navigationItem: app_navigation_insert_input!) { insert_app_navigation_one(object: $navigationItem) { id created_at description user_group_ids icon_name label link_target placement position updated_at content_type content_path tooltip } }",
  "updateNavigationById": "mutation updateNavigationById($id: uuid!, $navigationItem: app_navigation_set_input!) { update_app_navigation_by_pk(pk_columns: { id: $id }, _set: $navigationItem) { id created_at description user_group_ids icon_name label link_target placement position updated_at content_type content_path tooltip } }",
  "getPermissions": "query getPermissions { users_permission(order_by: { label: asc }) { id label name description } }",
  "getSiteVariableByName": "query getSiteVariableByName($name: String!) { app_config_by_pk(name: $name) { name value } }",
  "updateSiteVariableByName": "mutation updateSiteVariableByName($name: String!, $data: app_config_set_input!) { update_app_config(where: { name: { _eq: $name } }, _set: $data) { affected_rows } }",
  "getUserGroupsPermissions": "query getUserGroupsPermissions { users_group { id label name permissions { permission { id label name description } } } }",
  "updateUserGroupsPermissions": "mutation updateUserGroupsPermissions( $insertions: [users_group_permission_insert_input!]! $deletions: users_group_permission_bool_exp! ) { delete_users_group_permission(where: $deletions) { affected_rows } insert_users_group_permission( objects: $insertions on_conflict: { constraint: group_permission_group_id_permission_id_key, update_columns: [] } ) { affected_rows } }",
  "deleteCollection": "mutation deleteCollection($collectionId: uuid, $userProfileId: uuid) { delete_users_folder( where: { id: { _eq: $collectionId }, user_profile_id: { _eq: $userProfileId } } ) { affected_rows } }",
  "findCollectionById": "query findCollectionById($collectionId: uuid) { users_folder(where: { id: { _eq: $collectionId } }) { created_at id is_default name updated_at user_profile_id } }",
  "findCollectionObjectsByCollectionId": "query findCollectionObjectsByCollectionId( $collectionId: uuid $userProfileId: uuid $where: users_folder_ie_bool_exp! $offset: Int $limit: Int ) { users_folder_ie( where: { _and: [{ user_collection_id: { _eq: $collectionId } }, $where] collection: { user_profile_id: { _eq: $userProfileId } } } offset: $offset limit: $limit ) { created_at ie { schema_identifier meemoo_identifier meemoo_local_id schema_name schema_creator schema_description dcterms_available schema_thumbnail_url dcterms_format schema_number_of_pages schema_is_part_of schema_date_published schema_date_created_lower_bound maintainer { schema_identifier schema_name visitor_space { id slug schema_maintainer_id } } } } users_folder_ie_aggregate( where: { _and: [{ user_collection_id: { _eq: $collectionId } }, $where] } ) { aggregate { count } } }",
  "findCollectionsByUser": "query findCollectionsByUser($userProfileId: uuid, $offset: Int, $limit: Int) { users_folder( where: { user_profile_id: { _eq: $userProfileId } } order_by: { created_at: asc } offset: $offset limit: $limit ) { id name user_profile_id is_default created_at updated_at ies { ie { schema_identifier } } } users_folder_aggregate(where: { user_profile_id: { _eq: $userProfileId } }) { aggregate { count } } }",
  "findObjectBySchemaIdentifier": "query findObjectBySchemaIdentifier($objectSchemaIdentifier: String) { object_ie(where: { schema_identifier: { _eq: $objectSchemaIdentifier } }, limit: 1) { schema_identifier meemoo_identifier meemoo_local_id schema_name schema_creator schema_description dcterms_available schema_thumbnail_url dcterms_format dcterms_medium schema_number_of_pages schema_is_part_of schema_date_published schema_date_created_lower_bound maintainer { schema_identifier schema_name visitor_space { id slug schema_maintainer_id } } } }",
  "findObjectInCollection": "query findObjectInCollection($collectionId: uuid, $objectSchemaIdentifier: String) { users_folder_ie( where: { user_collection_id: { _eq: $collectionId } ie_schema_identifier: { _eq: $objectSchemaIdentifier } } ) { ie { schema_identifier meemoo_identifier schema_name schema_creator schema_description dcterms_available schema_thumbnail_url dcterms_format schema_number_of_pages schema_is_part_of schema_date_published schema_date_created_lower_bound maintainer { schema_identifier schema_name visitor_space { id slug schema_maintainer_id } } } created_at } }",
  "insertCollections": "mutation insertCollections($object: users_folder_insert_input!) { insert_users_folder(objects: [$object]) { returning { id name user_profile_id is_default created_at updated_at } } }",
  "insertObjectIntoCollection": "mutation insertObjectIntoCollection($collectionId: uuid, $objectSchemaIdentifier: String) { insert_users_folder_ie( objects: { user_collection_id: $collectionId ie_schema_identifier: $objectSchemaIdentifier } ) { returning { created_at ie { schema_identifier meemoo_identifier dcterms_format dcterms_available schema_creator schema_description schema_name schema_maintainer_id schema_number_of_pages } } } }",
  "removeObjectFromCollection": "mutation removeObjectFromCollection( $objectSchemaIdentifier: String $collectionId: uuid $userProfileId: uuid ) { delete_users_folder_ie( where: { ie_schema_identifier: { _eq: $objectSchemaIdentifier } user_collection_id: { _eq: $collectionId } collection: { user_profile_id: { _eq: $userProfileId } } } ) { affected_rows } }",
  "updateCollection": "mutation updateCollection( $collectionId: uuid $userProfileId: uuid $collection: users_folder_set_input ) { update_users_folder( where: { id: { _eq: $collectionId }, user_profile_id: { _eq: $userProfileId } } _set: $collection ) { returning { id name user_profile_id is_default created_at updated_at } } }",
  "findContentPartners": "query findContentPartners($where: maintainer_content_partner_bool_exp!) { maintainer_content_partner(where: $where) { schema_identifier schema_name } maintainer_content_partner_aggregate(where: $where) { aggregate { count } } }",
  "findAllObjectsByCollectionId": "query findAllObjectsByCollectionId($collectionId: uuid, $userProfileId: uuid) { users_folder_ie( where: { user_collection_id: { _eq: $collectionId } collection: { user_profile_id: { _eq: $userProfileId } } } ) { ie { schema_identifier premis_identifier maintainer { schema_name } schema_name dcterms_format schema_date_created_lower_bound schema_date_published schema_is_part_of meemoo_identifier meemoo_local_id } } }",
  "getObjectDetailBySchemaIdentifier": "query getObjectDetailBySchemaIdentifier($schemaIdentifier: String!) { object_ie(where: { schema_identifier: { _eq: $schemaIdentifier } }) { schema_identifier meemoo_identifier premis_identifier premis_is_part_of schema_is_part_of maintainer { schema_identifier schema_name information { primary_site } } schema_copyright_holder schema_copyright_notice schema_duration_in_seconds schema_number_of_pages schema_date_published dcterms_available schema_name schema_description schema_abstract schema_creator schema_actor schema_publisher schema_temporal_coverage schema_spatial_coverage schema_keywords dcterms_format dcterms_medium schema_in_language schema_thumbnail_url schema_duration schema_license meemoo_media_object_id schema_date_created schema_date_created_lower_bound ebucore_object_type schema_genre meemoofilm_color meemoofilm_base meemoofilm_image_or_sound meemoo_local_id meemoo_original_cp meemoo_description_programme meemoo_description_cast premis_is_represented_by { ie_schema_identifier schema_name schema_alternate_name schema_description dcterms_format schema_transcript schema_date_created premis_includes { schema_name schema_alternate_name schema_description representation_schema_identifier ebucore_media_type ebucore_is_media_fragment_of schema_embed_url } } } }",
  "getObjectIdentifierTuple": "query getObjectIdentifierTuple($meemooIdentifiers: [String!]) { object_ie(where: { meemoo_identifier: { _in: $meemooIdentifiers } }) { schema_identifier meemoo_identifier } }",
  "getRelatedObjects": "query getRelatedObjects( $schemaIdentifier: String! $meemooIdentifier: String! $maintainerId: String! ) { object_ie( where: { schema_identifier: { _neq: $schemaIdentifier } meemoo_identifier: { _eq: $meemooIdentifier } schema_maintainer_id: { _eq: $maintainerId } } ) { schema_identifier meemoo_identifier premis_identifier premis_is_part_of schema_is_part_of maintainer { schema_identifier schema_name information { primary_site } } schema_copyright_holder schema_copyright_notice schema_duration_in_seconds schema_number_of_pages schema_date_published dcterms_available schema_name schema_description schema_abstract schema_creator schema_actor schema_publisher schema_temporal_coverage schema_spatial_coverage schema_keywords dcterms_format schema_in_language schema_thumbnail_url schema_duration schema_license meemoo_media_object_id schema_date_created schema_date_created_lower_bound ebucore_object_type schema_genre premis_is_represented_by { ie_schema_identifier schema_name schema_alternate_name schema_description dcterms_format schema_transcript schema_date_created premis_includes { schema_name schema_alternate_name schema_description representation_schema_identifier ebucore_media_type ebucore_is_media_fragment_of schema_embed_url } } } }",
  "getVisitRequestForAccess": "query getVisitRequestForAccess($userProfileId: uuid!, $maintainerOrId: String!, $now: timestamp!) { maintainer_visitor_space_request( where: { user_profile_id: { _eq: $userProfileId } visitor_space: { schema_maintainer_id: { _ilike: $maintainerOrId } } start_date: { _lte: $now } end_date: { _gte: $now } status: { _eq: \"APPROVED\" } } ) { id } }",
  "deleteNotifications": "mutation deleteNotifications($where: app_notification_bool_exp!) { delete_app_notification(where: $where) { affected_rows } }",
  "findNotificationsByUser": "query findNotificationsByUser( $userProfileId: uuid $moreRecentThan: timestamptz $offset: Int $limit: Int ) { app_notification( where: { _or: [ { recipient: { _eq: $userProfileId } created_at: { _gt: $moreRecentThan } status: { _eq: \"READ\" } } { recipient: { _eq: $userProfileId }, status: { _eq: \"UNREAD\" } } ] } order_by: { created_at: desc } limit: $limit offset: $offset ) { id description title status type recipient visit_id created_at updated_at visitor_space_request { id visitor_space { id slug schema_maintainer_id } } } app_notification_aggregate( where: { _or: [ { recipient: { _eq: $userProfileId } created_at: { _gt: $moreRecentThan } status: { _eq: \"READ\" } } { recipient: { _eq: $userProfileId }, status: { _eq: \"UNREAD\" } } ] } ) { aggregate { count } } }",
  "insertNotifications": "mutation insertNotifications($objects: [app_notification_insert_input!]!) { insert_app_notification(objects: $objects) { returning { id description title status type recipient visit_id created_at updated_at visitor_space_request { cp_space_id visitor_space { id slug schema_maintainer_id } } } } }",
  "updateAllNotificationsForUser": "mutation updateAllNotificationsForUser( $userProfileId: uuid $notification: app_notification_set_input ) { update_app_notification(where: { recipient: { _eq: $userProfileId } }, _set: $notification) { affected_rows } }",
  "updateNotification": "mutation updateNotification( $notificationId: uuid $userProfileId: uuid $notification: app_notification_set_input ) { update_app_notification( where: { id: { _eq: $notificationId }, recipient: { _eq: $userProfileId } } _set: $notification ) { returning { id description title status type recipient visit_id created_at updated_at visitor_space_request { cp_space_id visitor_space { id slug schema_maintainer_id } } } } }",
  "deleteOrganisations": "mutation deleteOrganisations { delete_maintainer_organisation(where: {}) { affected_rows } }",
  "insertOrganisations": "mutation insertOrganisations($organizations: [maintainer_organisation_insert_input!]!) { insert_maintainer_organisation(objects: $organizations) { affected_rows } }",
  "createSpace": "mutation createSpace($createSpace: maintainer_visitor_space_insert_input!) { insert_maintainer_visitor_space_one(object: $createSpace) { id slug schema_image schema_color schema_audience_type schema_description schema_public_access schema_service_description status published_at created_at updated_at content_partner { schema_name schema_identifier information { contact_point description logo primary_site } } } }",
  "findSpaceByCpAdminId": "query findSpaceByCpAdminId($cpAdminId: uuid!) { maintainer_visitor_space( where: { content_partner: { maintainer_users_profiles: { users_profile_id: { _eq: $cpAdminId } } } } ) { id slug schema_image schema_color schema_audience_type schema_description schema_public_access schema_service_description status published_at created_at updated_at content_partner { schema_name schema_identifier information { contact_point description logo primary_site } } } }",
  "findSpaceById": "query findSpaceById($id: uuid!) { maintainer_visitor_space(where: { id: { _eq: $id } }) { id slug schema_image schema_color schema_audience_type schema_description schema_public_access schema_service_description status published_at created_at updated_at content_partner { schema_name schema_identifier information { contact_point description logo primary_site } } } }",
  "findSpaceByMaintainerId": "query findSpaceByMaintainerId($maintainerId: String!) { maintainer_visitor_space(where: { schema_maintainer_id: { _eq: $maintainerId } }) { id slug schema_image schema_color schema_audience_type schema_description schema_public_access schema_service_description status published_at created_at updated_at content_partner { schema_name schema_identifier information { contact_point description logo primary_site } } } }",
  "findSpaceBySlug": "query findSpaceBySlug($slug: String!) { maintainer_visitor_space(where: { slug: { _eq: $slug } }) { id slug schema_image schema_color schema_audience_type schema_description schema_public_access schema_service_description status published_at created_at updated_at content_partner { schema_name schema_identifier information { contact_point description logo primary_site } } } }",
  "findSpaces": "query findSpaces( $where: maintainer_visitor_space_bool_exp! $offset: Int! $limit: Int! $orderBy: maintainer_visitor_space_order_by! ) { maintainer_visitor_space(where: $where, offset: $offset, limit: $limit, order_by: [$orderBy]) { id slug schema_image schema_color schema_audience_type schema_description schema_public_access schema_service_description status published_at created_at updated_at content_partner { schema_name schema_identifier information { contact_point description logo primary_site } } } maintainer_visitor_space_aggregate(where: $where) { aggregate { count } } }",
  "getSpaceMaintainerProfiles": "query getSpaceMaintainerProfiles($spaceId: uuid) { maintainer_users_profile( where: { maintainer: { visitor_space: { id: { _eq: $spaceId } } } profile: { group: { name: { _eq: \"CP_ADMIN\" } } } } ) { users_profile_id profile { mail } } }",
  "updateContentPartner": "mutation updateContentPartner( $updateContentPartner: maintainer_content_partner_set_input! $pkColumns: maintainer_content_partner_pk_columns_input! ) { update_maintainer_content_partner_by_pk(_set: $updateContentPartner, pk_columns: $pkColumns) { schema_identifier } }",
  "updateSpace": "mutation updateSpace($id: uuid!, $updateSpace: maintainer_visitor_space_set_input!) { update_maintainer_visitor_space_by_pk(pk_columns: { id: $id }, _set: $updateSpace) { id slug schema_image schema_color schema_audience_type schema_description schema_public_access schema_service_description status published_at created_at updated_at content_partner { schema_name schema_identifier information { contact_point description logo primary_site } } } }",
  "getFirstObjectId": "query getFirstObjectId { object_ie(limit: 1) { schema_identifier } }",
  "getTosLastUpdatedAt": "query getTosLastUpdatedAt { app_config_by_pk(name: \"TOS_LAST_UPDATED_AT\") { value } }",
  "deleteLinkUserToMaintainer": "mutation deleteLinkUserToMaintainer($userProfileId: uuid!) { delete_maintainer_users_profile(where: { users_profile_id: { _eq: $userProfileId } }) { affected_rows } }",
  "getLinkUserToMaintainer": "query getLinkUserToMaintainer($userProfileId: uuid!) { maintainer_users_profile(where: { users_profile_id: { _eq: $userProfileId } }) { id maintainer_identifier users_profile_id } }",
  "getUserByIdentityId": "query getUserByIdentityId($identityId: uuid!) { users_profile(where: { identities: { id: { _eq: $identityId } } }) { id first_name last_name full_name mail accepted_tos_at group_id group { permissions(order_by: { permission: { name: asc } }) { permission { name } } } identities { identity_provider_name } maintainer_users_profiles { maintainer_identifier maintainer { visitor_space { id slug schema_maintainer_id } } } } }",
  "insertLinkUserToMaintainer": "mutation insertLinkUserToMaintainer($maintainerId: String!, $userProfileId: uuid!) { insert_maintainer_users_profile_one( object: { maintainer_identifier: $maintainerId, users_profile_id: $userProfileId } on_conflict: { constraint: maintainer_users_profile_maintainer_identifier_users_profil_key update_columns: [] } ) { id } }",
  "insertUserIdentity": "mutation insertUserIdentity($newUserIdentity: users_identity_insert_input!) { insert_users_identity_one(object: $newUserIdentity) { id } }",
  "insertUser": "mutation insertUser($newUser: users_profile_insert_input!) { insert_users_profile_one(object: $newUser) { id first_name last_name full_name mail accepted_tos_at group_id group { permissions { permission { name } } } identities { identity_provider_name } maintainer_users_profiles { maintainer_identifier maintainer { visitor_space { id slug schema_maintainer_id } } } } }",
  "updateUserLastAccessDate": "mutation updateUserLastAccessDate($userProfileId: uuid!, $date: timestamptz) { update_users_profile(where: { id: { _eq: $userProfileId } }, _set: { last_access_at: $date }) { affected_rows } }",
  "updateUserProfile": "mutation updateUserProfile($id: uuid!, $updateUser: users_profile_set_input!) { update_users_profile_by_pk(pk_columns: { id: $id }, _set: $updateUser) { id first_name last_name full_name mail accepted_tos_at group_id group { permissions { permission { name } } } identities { identity_provider_name } maintainer_users_profiles { maintainer_identifier maintainer { visitor_space { id slug schema_maintainer_id } } } } }",
  "findActiveVisitByUserAndSpace": "query findActiveVisitByUserAndSpace( $userProfileId: uuid! $visitorSpaceSlug: String! $now: timestamp! ) { maintainer_visitor_space_request( where: { user_profile_id: { _eq: $userProfileId } status: { _eq: \"APPROVED\" } start_date: { _lte: $now } end_date: { _gte: $now } visitor_space: { slug: { _eq: $visitorSpaceSlug } } } ) { id cp_space_id user_profile_id requested_by { id full_name first_name last_name mail } user_reason user_timeframe status start_date end_date visitor_space_request_notes(order_by: { created_at: desc }, limit: 1) { id note profile { full_name } created_at } created_at updated_at last_updated_by { id full_name } visitor_space { id slug schema_maintainer_id schema_image schema_color schema_audience_type schema_description schema_public_access schema_service_description status published_at created_at updated_at content_partner { schema_name schema_identifier information { contact_point description logo primary_site } } } } }",
  "findApprovedAlmostEndedVisitsWithoutNotification": "query findApprovedAlmostEndedVisitsWithoutNotification($warningDate: timestamp, $now: timestamp) { maintainer_visitor_space_request( where: { status: { _eq: \"APPROVED\" } end_date: { _lt: $warningDate, _gt: $now } _not: { notifications: { type: { _eq: \"ACCESS_PERIOD_VISITOR_SPACE_END_WARNING\" } } } } ) { id cp_space_id user_profile_id requested_by { id full_name first_name last_name mail } user_reason user_timeframe status start_date end_date created_at updated_at last_updated_by { id full_name } visitor_space { id slug schema_maintainer_id schema_image schema_color schema_audience_type schema_description schema_public_access schema_service_description status published_at created_at updated_at content_partner { schema_name schema_identifier information { contact_point description logo primary_site } } } } }",
  "findApprovedEndedVisitsWithoutNotification": "query findApprovedEndedVisitsWithoutNotification($now: timestamp) { maintainer_visitor_space_request( where: { status: { _eq: \"APPROVED\" } end_date: { _lt: $now } _not: { notifications: { type: { _eq: \"ACCESS_PERIOD_VISITOR_SPACE_ENDED\" } } } } ) { id cp_space_id user_profile_id requested_by { id full_name first_name last_name mail } user_reason user_timeframe status start_date end_date created_at updated_at last_updated_by { id full_name } visitor_space { id slug schema_maintainer_id schema_image schema_color schema_audience_type schema_description schema_public_access schema_service_description status published_at created_at updated_at content_partner { schema_name schema_identifier information { contact_point description logo primary_site } } } } }",
  "findApprovedStartedVisitsWithoutNotification": "query findApprovedStartedVisitsWithoutNotification($now: timestamp) { maintainer_visitor_space_request( where: { status: { _eq: \"APPROVED\" } start_date: { _lt: $now } end_date: { _gt: $now } _not: { notifications: { type: { _eq: \"ACCESS_PERIOD_VISITOR_SPACE_STARTED\" } } } } ) { id cp_space_id user_profile_id requested_by { id full_name first_name last_name mail } user_reason user_timeframe status start_date end_date created_at updated_at last_updated_by { id full_name } visitor_space { id slug schema_maintainer_id schema_image schema_color schema_audience_type schema_description schema_public_access schema_service_description status published_at created_at updated_at content_partner { schema_name schema_identifier information { contact_point description logo primary_site } } } } }",
  "findPendingOrApprovedVisitRequestsForUser": "query findPendingOrApprovedVisitRequestsForUser( $userProfileId: uuid! $spaceSlug: String! $now: timestamp! ) { maintainer_visitor_space_request( where: { user_profile_id: { _eq: $userProfileId } visitor_space: { slug: { _eq: $spaceSlug } } _or: [ { end_date: { _gte: $now }, status: { _eq: \"APPROVED\" } } { status: { _eq: \"PENDING\" } } ] } order_by: { status_info: { sort_order: asc } } ) { id cp_space_id user_profile_id status start_date end_date } }",
  "findVisitById": "query findVisitById($id: uuid!) { maintainer_visitor_space_request(where: { id: { _eq: $id } }) { id cp_space_id user_profile_id requested_by { id full_name first_name last_name mail } user_reason user_timeframe status start_date end_date visitor_space_request_notes(order_by: { created_at: desc }, limit: 1) { id note profile { full_name } created_at } created_at updated_at last_updated_by { id full_name } visitor_space { id slug schema_maintainer_id schema_image schema_color schema_audience_type schema_description schema_public_access schema_service_description status published_at created_at updated_at content_partner { schema_name schema_identifier information { contact_point description logo primary_site } } } } }",
  "findVisits": "query findVisits( $where: maintainer_visitor_space_request_bool_exp $offset: Int! $limit: Int! $orderBy: maintainer_visitor_space_request_order_by! = {} ) { maintainer_visitor_space_request( where: $where offset: $offset limit: $limit order_by: [$orderBy] ) { id cp_space_id user_profile_id requested_by { id full_name first_name last_name mail } user_reason user_timeframe status start_date end_date visitor_space_request_notes(order_by: { created_at: desc }, limit: 1) { id note profile { full_name } created_at } created_at updated_at visitor_space { id slug schema_maintainer_id schema_image schema_color schema_audience_type schema_description schema_public_access schema_service_description status published_at created_at updated_at content_partner { schema_name schema_identifier information { contact_point description logo primary_site } } } last_updated_by { id full_name } } maintainer_visitor_space_request_aggregate(where: $where) { aggregate { count } } }",
  "insertNote": "mutation insertNote($visitId: uuid!, $note: String, $userProfileId: uuid) { insert_maintainer_visitor_space_request_note_one( object: { visit_id: $visitId, note: $note, profile_id: $userProfileId } ) { id } }",
  "insertVisit": "mutation insertVisit($newVisit: maintainer_visitor_space_request_insert_input!) { insert_maintainer_visitor_space_request_one(object: $newVisit) { id cp_space_id user_profile_id requested_by { id full_name first_name last_name mail } user_reason user_timeframe status start_date end_date visitor_space_request_notes(order_by: { created_at: desc }, limit: 1) { id note profile { full_name } created_at } created_at updated_at last_updated_by { id full_name } visitor_space { id slug schema_maintainer_id schema_image schema_color schema_audience_type schema_description schema_public_access schema_service_description status published_at created_at updated_at content_partner { schema_name schema_identifier information { contact_point description logo primary_site } } } } }",
  "pendingVisitCountForUserBySlug": "query pendingVisitCountForUserBySlug($user: uuid = \"\", $slug: String = \"\") { maintainer_visitor_space_request_aggregate( where: { user_profile_id: { _eq: $user } status: { _eq: \"PENDING\" } visitor_space: { slug: { _eq: $slug } } } ) { aggregate { count } nodes { cp_space_id } } }",
  "updateVisit": "mutation updateVisit($id: uuid!, $updateVisit: maintainer_visitor_space_request_set_input!) { update_maintainer_visitor_space_request_by_pk(pk_columns: { id: $id }, _set: $updateVisit) { id cp_space_id user_profile_id requested_by { id full_name first_name last_name mail } user_reason user_timeframe status start_date end_date visitor_space_request_notes(order_by: { created_at: desc }, limit: 1) { id note profile { full_name } created_at } created_at updated_at last_updated_by { id full_name } visitor_space { id slug schema_maintainer_id schema_image schema_color schema_audience_type schema_description schema_public_access schema_service_description status published_at created_at updated_at content_partner { schema_name schema_identifier information { contact_point description logo primary_site } } } } }"
}